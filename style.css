@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap");

/***
  Josh Comeau CSS Reset 
***/

/* 
  1. Use a more intuitive box-sizing model
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  2. Remove default margin
*/

* {
  margin: 0;
}

/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}

/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/***
  Custom variables
***/
:root {
  /* color */
  --purple: hsl(231, 100%, 71%);
  --beige-orange: hsl(14, 100%, 78%);

  /* neutral color */
  --primary: hsl(0, 0%, 0%);
  --secondary: hsl(0, 0%, 100%);

  /* font */
  --ff-serif: "Roboto", sans-serif;
  --fs-normal: 16px;

  /* general spacing */
  --padding: 2rem;

  /* component */
  --nav-height: 3rem;
}

/* end custom variables */

/***
  Utility class
***/
.underline {
  text-decoration: underline;
}

.active {
  font-weight: bold;
}

.hidden {
  display: none;
}

.show {
  display: block;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  visibility: hidden;
  opacity: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
  transition: visibility 0s, opacity 0.5s linear;
}

/* 
This can be useful when you want to visually hide something on small screens but show it on larger screens */
.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  visibility: visible;
  opacity: 1;
  overflow: visible;
  clip: auto;
  white-space: normal;
  transition: visibility 0s, opacity 0.5s linear;
}

.fw-normal {
  font-weight: normal;
}

.capitalize {
  text-transform: capitalize;
}

.uppercase {
  text-transform: uppercase;
}

.text-dark {
  color: var(--primary);
}

.text-white {
  color: var(--secondary);
}

.bg-dark {
  background-color: var(--primary);
}

.bg-white {
  background-color: var(--secondary);
}

.pointer {
  cursor: pointer;
}

a,
a:hover,
a:link,
a:visited,
a:active {
  text-decoration: none;
}

/* end utility class */

/* general styling */
body {
  font-family: var(--ff-serif);
  font-size: var(--fs-normal);
  font-weight: medium;
  color: var(--secondary);
  background-color: var(--primary);
  transition: background-color 300ms linear;
  /* padding: 2rem; */
  position: relative;
}

svg {
  fill: currentColor;
}

a {
  text-decoration: none;
  color: var(--secondary);
  opacity: 0.85;
  font-size: 0.9rem;
  position: relative;
}

a:hover {
  text-decoration-skip-ink: all;
}

a::before,
a::after {
  position: relative;
  color: var(--secondary);
  opacity: 0;
  transition: opacity 250ms ease;
}

a::before {
  content: "[";
  left: -7.5px;
}

a::after {
  content: "]";
  right: -7.5px;
}

a:active {
  font-weight: bold;
}

a:hover::before,
a:hover::after {
  opacity: 0.7;
}

ul {
  list-style-type: none;
  padding-left: 0;
  width: fit-content;
}

button {
  all: unset;
}

/* styling here */

.navbar-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: var(--nav-height, 64px);
  padding: var(--padding, 2rem);
}

.navbar--mobile {
  display: none;
  /* z-index: */
}

@media (max-width: 770px) {
  .navbar {
    display: none;
  }

  .navbar + .navbar--mobile {
    display: block;
  }
}

.navbar__links {
  display: flex;
  gap: clamp(2.5rem, 5vw, 3.125rem);
}

.navbar__menu-btn {
  color: var(--secondary);
}

.menu {
  height: calc(100% - 64px);
}

.menu-container {
  height: 100%;
  display: flex;
  align-items: end;
}

.menu-items {
  padding-left: var(--padding, 2rem);
  padding-bottom: 6rem;
}

.menu-item {
  position: relative;
  padding: 0.5rem 0;
}
